package euler.solutions

import scala.math.BigInt

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

object Solution002 extends App {
  val fibs: Stream[BigInt] = 0 #:: fibs.scanLeft(BigInt(1))(_ + _)

  val answer = fibs.takeWhile(_ <= 4000000).reduceLeft((count, value) =>
    if (value % 2 != 0) count + value
    else count
  )

  assert(answer == 4613732)
}
